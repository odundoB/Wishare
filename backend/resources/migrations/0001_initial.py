# Generated by Django 5.2.7 on 2025-10-03 21:02

import django.core.validators
import django.db.models.deletion
import resources.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of the resource', max_length=200)),
                ('description', models.TextField(help_text='Detailed description of the resource')),
                ('resource_type', models.CharField(choices=[('file', 'File Upload'), ('url', 'External Link')], default='file', help_text='Type of resource: file upload or external link', max_length=10)),
                ('file', models.FileField(blank=True, help_text='Upload a file (PDF, DOC, PPT, images, videos, etc.)', null=True, upload_to=resources.models.resource_file_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'ppt', 'pptx', 'txt', 'zip', 'rar', 'jpg', 'jpeg', 'png', 'gif', 'mp4', 'mp3', 'wav'])])),
                ('url', models.URLField(blank=True, help_text='External link to the resource', null=True)),
                ('subject', models.CharField(choices=[('mathematics', 'Mathematics'), ('science', 'Science'), ('english', 'English'), ('history', 'History'), ('geography', 'Geography'), ('art', 'Art'), ('music', 'Music'), ('physical_education', 'Physical Education'), ('computer_science', 'Computer Science'), ('foreign_language', 'Foreign Language'), ('other', 'Other')], help_text='Subject category of the resource', max_length=50)),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags for better searchability', max_length=500)),
                ('is_public', models.BooleanField(default=True, help_text='Whether this resource is visible to all users')),
                ('download_count', models.PositiveIntegerField(default=0, help_text='Number of times this resource has been downloaded')),
                ('file_size', models.PositiveIntegerField(blank=True, help_text='File size in bytes', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this resource was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this resource was last updated')),
                ('uploaded_by', models.ForeignKey(help_text='User who uploaded this resource', on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_resources', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Resource',
                'verbose_name_plural': 'Resources',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['subject'], name='resources_r_subject_c472a4_idx'), models.Index(fields=['created_at'], name='resources_r_created_215cda_idx'), models.Index(fields=['uploaded_by'], name='resources_r_uploade_6765b4_idx'), models.Index(fields=['is_public'], name='resources_r_is_publ_242d19_idx')],
            },
        ),
    ]
